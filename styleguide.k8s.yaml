# deployment
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: $CI_ENVIRONMENT_SLUG
  labels:
    app: $CI_ENVIRONMENT_SLUG
spec:
  replicas: 1
  selector:
    matchLabels:
      app: $CI_ENVIRONMENT_SLUG
  strategy:
    type: Recreate
  # container template
  template:
    metadata:
      labels:
        app: $CI_ENVIRONMENT_SLUG
        deploy-date: $DEPLOY_DATE
    spec:
      containers:
        - name: $CI_ENVIRONMENT_SLUG
          image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 80
            periodSeconds: 10
            initialDelaySeconds: 10
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 80
            periodSeconds: 10
            initialDelaySeconds: 10
      restartPolicy: Always
      imagePullSecrets:
        - name: regcred
      terminationGracePeriodSeconds: 30
---
# services
apiVersion: v1
kind: Service
metadata:
  name: $CI_ENVIRONMENT_SLUG
  labels:
    app: $CI_ENVIRONMENT_SLUG
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
  selector:
    app: $CI_ENVIRONMENT_SLUG
---
# ingres
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: $CI_ENVIRONMENT_SLUG
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefixStrip
spec:
  rules:
    - host: $DOMAIN_NAME
      http:
        paths:
          - backend:
              serviceName: $CI_ENVIRONMENT_SLUG
              servicePort: http