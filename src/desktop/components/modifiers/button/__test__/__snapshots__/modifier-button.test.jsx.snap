// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ModifierButton /> should handle "className" properly 1`] = `
<ForwardRef(ModifierButton)
  className="test-class"
>
  <div
    className="modifier-button test-class"
  >
    <div
      className="content"
    >
      <span
        className="text guttered"
      />
    </div>
  </div>
</ForwardRef(ModifierButton)>
`;

exports[`<ModifierButton /> should handle "color" properly 1`] = `
<ForwardRef(ModifierButton)
  color="#bada55"
>
  <div
    className="modifier-button"
    style={
      Object {
        "background": "#bada55",
      }
    }
  >
    <div
      className="content"
    >
      <span
        className="text guttered"
      />
    </div>
  </div>
</ForwardRef(ModifierButton)>
`;

exports[`<ModifierButton /> should handle "color" properly 2`] = `
<ForwardRef(ModifierButton)>
  <div
    className="modifier-button"
  >
    <div
      className="content"
    >
      <span
        className="text guttered"
      />
    </div>
  </div>
</ForwardRef(ModifierButton)>
`;

exports[`<ModifierButton /> should handle "onClick" prop 1`] = `
<div
  className="modifier-button test-class"
  onClick={[MockFunction]}
>
  <div
    className="content"
  >
    <span
      className="text guttered"
    >
      Test content
    </span>
  </div>
</div>
`;

exports[`<ModifierButton /> should handle "selected" properly 1`] = `
<ForwardRef(ModifierButton)
  selected={true}
>
  <div
    className="modifier-button selected"
  >
    <div
      className="content"
    >
      <span
        className="text guttered"
      />
    </div>
  </div>
</ForwardRef(ModifierButton)>
`;

exports[`<ModifierButton /> should handle "selected" properly 2`] = `
<ForwardRef(ModifierButton)>
  <div
    className="modifier-button"
  >
    <div
      className="content"
    >
      <span
        className="text guttered"
      />
    </div>
  </div>
</ForwardRef(ModifierButton)>
`;

exports[`<ModifierButton /> should handle "type" and "content" properly 1`] = `
<ForwardRef(ModifierButton)
  content="Test content"
  type="text"
>
  <div
    className="modifier-button"
  >
    <div
      className="content"
    >
      <span
        className="text guttered"
      >
        Test content
      </span>
    </div>
  </div>
</ForwardRef(ModifierButton)>
`;

exports[`<ModifierButton /> should handle "type" and "content" properly 2`] = `
<ForwardRef(ModifierButton)
  content="Test content"
  image="www.abc.com"
  type="image"
>
  <div
    className="modifier-button squared"
  >
    <div
      className="content"
    >
      <img
        alt="Test content"
        className="image"
        src="www.abc.com"
      />
    </div>
  </div>
</ForwardRef(ModifierButton)>
`;

exports[`<ModifierButton /> should handle "type" and "content" properly 3`] = `
<ForwardRef(ModifierButton)
  image="www.abc.com"
>
  <div
    className="modifier-button"
  >
    <div
      className="content"
    >
      <span
        className="text guttered"
      />
    </div>
  </div>
</ForwardRef(ModifierButton)>
`;

exports[`<ModifierButton /> should not show title when type is color 1`] = `
<ForwardRef(ModifierButton)
  content="content"
  type="color"
>
  <div
    className="modifier-button squared"
  />
</ForwardRef(ModifierButton)>
`;

exports[`<ModifierButton /> should render count 1`] = `
<ForwardRef(ModifierButton)
  count={12}
>
  <div
    className="modifier-button"
  >
    <span
      className="label with-count"
    >
      12
    </span>
    <div
      className="content"
    >
      <span
        className="text guttered"
      />
    </div>
  </div>
</ForwardRef(ModifierButton)>
`;

exports[`<ModifierButton /> should render count 2`] = `
<ForwardRef(ModifierButton)>
  <div
    className="modifier-button"
  >
    <div
      className="content"
    >
      <span
        className="text guttered"
      />
    </div>
  </div>
</ForwardRef(ModifierButton)>
`;

exports[`<ModifierButton /> should render count 3`] = `
<ForwardRef(ModifierButton)
  count={123}
>
  <div
    className="modifier-button"
  >
    <span
      className="label with-count"
    >
      99+
    </span>
    <div
      className="content"
    >
      <span
        className="text guttered"
      />
    </div>
  </div>
</ForwardRef(ModifierButton)>
`;

exports[`<ModifierButton /> should render markdown and count 1`] = `
<ForwardRef(ModifierButton)
  count={666}
  isMarkdown={true}
>
  <div
    className="modifier-button"
  >
    <span
      className="label with-count"
    >
      99+
      (У)
    </span>
    <div
      className="content"
    >
      <span
        className="text guttered"
      />
    </div>
  </div>
</ForwardRef(ModifierButton)>
`;

exports[`<ModifierButton /> should render markdown and count 2`] = `
<ForwardRef(ModifierButton)
  isMarkdown={true}
>
  <div
    className="modifier-button"
  >
    <span
      className="label"
    >
      У
    </span>
    <div
      className="content"
    >
      <span
        className="text guttered"
      />
    </div>
  </div>
</ForwardRef(ModifierButton)>
`;

exports[`<ModifierButton /> should render without props 1`] = `
<ForwardRef(ModifierButton)>
  <div
    className="modifier-button"
  >
    <div
      className="content"
    >
      <span
        className="text guttered"
      />
    </div>
  </div>
</ForwardRef(ModifierButton)>
`;
