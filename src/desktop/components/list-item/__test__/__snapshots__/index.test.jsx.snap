// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ListItem /> should render with all props 1`] = `
<div
  className="wrapper-row test-wrapper-class"
>
  <Box
    alignItems="stretch"
    direction="row"
    display="flex"
    flex="grow"
    paddingY={6}
  >
    <div
      className="image-box-row"
    >
      <ItemImage
        alt="Foo"
        buttonsPos="left"
        className="image"
        hasTrashButton={true}
        itemUrl="#"
        quickViewBtnProps={
          Object {
            "className": "quick-view-btn",
            "onClick": undefined,
          }
        }
        src="cdn-url"
        trashButtonProps={
          Object {
            "className": "trash-cart-button display-on-hover",
            "onClick": undefined,
          }
        }
        wishProps={
          Object {
            "className": "wish is-wished",
            "isWished": true,
            "onClick": undefined,
          }
        }
      />
    </div>
    <div
      className="info-box"
    >
      <div
        className="info-flex-wrapper row"
      >
        <div
          className="info row"
        >
          <div
            className="details row"
          >
            <ItemName
              href="#"
              textProps={
                Object {
                  "size": 16,
                }
              }
            >
              Foo
            </ItemName>
            <Box
              marginTop={2}
            >
              <WholesalePrice
                className="wholesale"
                currencyGrapheme="$"
                description="foo"
                price={1000}
              />
            </Box>
            <Box
              marginTop={2}
            >
              <ItemProperties
                specClassName="detail"
                values={
                  Array [
                    Object {
                      "href": "#",
                      "value": "China",
                    },
                  ]
                }
              />
              <Memo(Text)
                color="gray38"
                lineHeight={20}
                size={14}
              >
                Арт.: 
                10000
              </Memo(Text)>
            </Box>
            <Box
              marginTop={2}
            >
              <Memo(Text)
                color="gray38"
                lineHeight={20}
                size={14}
              >
                Доставим 11 августа
              </Memo(Text)>
            </Box>
            <div
              className="price-fixed row"
            >
              <Box
                marginTop={2}
              >
                <Memo(Text)
                  color="gray38"
                  lineHeight={20}
                  size={14}
                >
                  Без скидок
                </Memo(Text)>
              </Box>
            </div>
            <ItemRating
              marginTop={3}
              reviewsCount={55}
              value={4.8}
            />
            <ItemModifier
              count={55}
              layout="inline"
              name="baz"
              title="foo"
              withTitle={true}
            />
          </div>
          <div
            className="prices row"
          >
            <ItemPrice
              currencyGrapheme="$"
              measure="₽ / м"
              price={4999}
              priceLayout="column"
              wholesaleProps={
                Object {
                  "description": "foo",
                  "price": 1000,
                }
              }
            />
            <ItemRetailFee
              currencyGrapheme="$"
              isFixed={true}
              marginTop={2}
              minQty={10}
              price={50}
            />
          </div>
        </div>
        <Box
          alignItems="center"
          dangerouslySetInlineStyle={
            Object {
              "__style": Object {
                "alignSelf": "stretch",
                "maxWidth": "100%",
              },
            }
          }
          direction="column"
          display="flex"
          justifyContent="between"
          marginTop={0}
        >
          <AddToCartBlock
            additionStepText="for 2 pcs"
            className="add-to-cart row"
            onAdd={[Function]}
            onChange={[Function]}
            onSubtract={[Function]}
            qty={5}
          />
        </Box>
        <div
          className="in-stock-wrapper"
        >
          <Memo(Text)
            weight={600}
          >
            in stock 300
          </Memo(Text)>
          <div
            className="analogues display-on-hover"
          >
            <ForwardRef(Link)>
              <Memo(Text)
                weight={600}
              >
                Аналоги
              </Memo(Text)>
            </ForwardRef(Link)>
          </div>
        </div>
      </div>
      <Box
        display="flex"
        justifyContent="between"
        marginBottom={0}
        marginTop={6}
      >
        <FlagsList
          flags={
            Array [
              Object {
                "bgColor": "#66cb2f",
                "definitions": Object {
                  "label": Object {
                    "type": "text",
                    "value": "Новинка",
                  },
                },
                "fields": Array [
                  "label",
                ],
                "link": "/new/",
                "strokeColor": null,
                "textColor": "#f2f2f2",
                "title": null,
              },
            ]
          }
        />
        <div
          className="balance"
        >
          <Memo(Text)
            color="gray38"
            lineHeight={20}
            size={14}
          >
            На складе 
            17
             
            .
          </Memo(Text)>
        </div>
      </Box>
    </div>
  </Box>
</div>
`;

exports[`<ListItem /> should render with all props 2`] = `
<div
  className="wrapper-column test-wrapper-class"
>
  <Box
    alignItems="stretch"
    direction="column"
    display="flex"
    flex="grow"
    paddingY={0}
  >
    <div
      className="image-box-column"
    >
      <ItemImage
        alt="Foo"
        buttonsPos="right"
        className="big-image"
        hasTrashButton={true}
        itemUrl="#"
        quickViewBtnProps={
          Object {
            "className": "quick-view-btn",
            "onClick": undefined,
          }
        }
        trashButtonProps={
          Object {
            "className": "trash-cart-button display-on-hover",
            "onClick": undefined,
          }
        }
        wishProps={
          Object {
            "className": "wish is-wished",
            "isWished": true,
            "onClick": undefined,
          }
        }
      />
    </div>
    <div
      className="info-box"
    >
      <div
        className="info-flex-wrapper column"
      >
        <div
          className="info column"
        >
          <div
            className="details column"
          >
            <ItemName
              href="#"
              textProps={
                Object {
                  "size": 16,
                }
              }
            >
              Foo
            </ItemName>
            <div
              className="price-fixed column"
            >
              <Box
                marginTop={2}
              >
                <Memo(Text)
                  color="gray38"
                  lineHeight={20}
                  size={14}
                >
                  Без скидок
                </Memo(Text)>
              </Box>
            </div>
            <ItemRating
              marginTop={3}
              reviewsCount={55}
              value={4.8}
            />
            <ItemModifier
              count={55}
              layout="block"
              name="baz"
              title="foo"
              withTitle={true}
            />
          </div>
          <div
            className="prices column"
          >
            <ItemPrice
              currencyGrapheme="$"
              measure="₽ / м"
              price={4999}
              priceLayout="row"
              showWholesalePrice={true}
              wholesaleProps={
                Object {
                  "description": "foo",
                  "price": 1000,
                }
              }
            />
          </div>
        </div>
        <Box
          alignItems="baseline"
          dangerouslySetInlineStyle={
            Object {
              "__style": Object {
                "alignSelf": "stretch",
                "maxWidth": "100%",
              },
            }
          }
          direction="column"
          display="flex"
          justifyContent="between"
          marginTop={3}
        >
          <ItemRetailFee
            currencyGrapheme="$"
            isSmaller={true}
            marginTop={2}
            minQty={10}
            price={50}
          />
          <AddToCartBlock
            additionStepText="for 2 pcs"
            asTile={true}
            className="add-to-cart column"
            onAdd={[Function]}
            onChange={[Function]}
            onSubtract={[Function]}
            qty={5}
          />
        </Box>
        <div
          className="in-stock-wrapper"
        >
          <Memo(Text)
            weight={600}
          >
            in stock 300
          </Memo(Text)>
          <div
            className="analogues display-on-hover"
          >
            <ForwardRef(Link)>
              <Memo(Text)
                weight={600}
              >
                Аналоги
              </Memo(Text)>
            </ForwardRef(Link)>
          </div>
        </div>
      </div>
      <Box
        display="flex"
        justifyContent="between"
        marginBottom={2}
        marginTop={-4}
      >
        <FlagsList
          flags={
            Array [
              Object {
                "bgColor": "#66cb2f",
                "definitions": Object {
                  "label": Object {
                    "type": "text",
                    "value": "Новинка",
                  },
                },
                "fields": Array [
                  "label",
                ],
                "link": "/new/",
                "strokeColor": null,
                "textColor": "#f2f2f2",
                "title": null,
              },
            ]
          }
        />
      </Box>
    </div>
  </Box>
</div>
`;

exports[`<ListItem /> should render with all props 3`] = `
<div
  className="wrapper-row test-wrapper-class"
>
  <Box
    alignItems="stretch"
    direction="row"
    display="flex"
    flex="grow"
    paddingY={6}
  >
    <div
      className="image-box-row"
    >
      <ItemImage
        alt="Foo"
        buttonsPos="left"
        className="image"
        hasTrashButton={true}
        itemUrl="#"
        quickViewBtnProps={
          Object {
            "className": "quick-view-btn",
            "onClick": undefined,
          }
        }
        src="cdn-url"
        trashButtonProps={
          Object {
            "className": "trash-cart-button display-on-hover",
            "onClick": undefined,
          }
        }
        wishProps={
          Object {
            "className": "wish is-wished",
            "isWished": true,
            "onClick": undefined,
          }
        }
      />
    </div>
    <div
      className="info-box"
    >
      <div
        className="info-flex-wrapper row"
      >
        <div
          className="info row"
        >
          <div
            className="details row"
          >
            <ItemName
              href="#"
              textProps={
                Object {
                  "size": 16,
                }
              }
            >
              Foo
            </ItemName>
            <Box
              marginTop={2}
            >
              <ItemProperties
                specClassName="detail"
                values={
                  Array [
                    Object {
                      "href": "#",
                      "value": "China",
                    },
                  ]
                }
              />
              <Memo(Text)
                color="gray38"
                lineHeight={20}
                size={14}
              >
                Арт.: 
                10000
              </Memo(Text)>
            </Box>
            <Box
              marginTop={2}
            >
              <Memo(Text)
                color="gray38"
                lineHeight={20}
                size={14}
              >
                Доставим 11 августа
              </Memo(Text)>
            </Box>
            <div
              className="price-fixed row"
            >
              <Box
                marginTop={2}
              >
                <Memo(Text)
                  color="gray38"
                  lineHeight={20}
                  size={14}
                >
                  Без скидок
                </Memo(Text)>
              </Box>
            </div>
            <ItemRating
              marginTop={3}
              reviewsCount={55}
              value={4.8}
            />
            <ItemModifier
              count={55}
              layout="inline"
              name="baz"
              title="foo"
              withTitle={true}
            />
          </div>
          <div
            className="prices row"
          >
            <ItemPrice
              currencyGrapheme="$"
              measure="₽ / м"
              price={4999}
              priceLayout="column"
              showWholesalePrice={false}
              unitPrice={16}
              wholesaleProps={
                Object {
                  "description": "foo",
                  "price": 1000,
                }
              }
            />
            <ItemRetailFee
              currencyGrapheme="$"
              isFixed={true}
              marginTop={2}
              minQty={10}
              price={50}
            />
          </div>
        </div>
        <Box
          alignItems="center"
          dangerouslySetInlineStyle={
            Object {
              "__style": Object {
                "alignSelf": "stretch",
                "maxWidth": "100%",
              },
            }
          }
          direction="column"
          display="flex"
          justifyContent="between"
          marginTop={0}
        >
          <AddToCartBlock
            additionStepText="for 2 pcs"
            asTile={false}
            className="add-to-cart row"
            onAdd={[Function]}
            onChange={[Function]}
            onSubtract={[Function]}
            qty={5}
          />
          <Memo(Text)
            color="gray38"
            lineHeight={20}
            size={14}
          >
            На складе 
            17
             
            .
          </Memo(Text)>
        </Box>
        <div
          className="in-stock-wrapper"
        >
          <Memo(Text)
            weight={600}
          >
            in stock 300
          </Memo(Text)>
          <div
            className="analogues display-on-hover"
          >
            <ForwardRef(Link)>
              <Memo(Text)
                weight={600}
              >
                Аналоги
              </Memo(Text)>
            </ForwardRef(Link)>
          </div>
        </div>
      </div>
    </div>
  </Box>
</div>
`;

exports[`<ListItem /> should render with all props 4`] = `
<div
  className="wrapper-column test-wrapper-class"
>
  <Box
    alignItems="stretch"
    direction="column"
    display="flex"
    flex="grow"
    paddingY={0}
  >
    <div
      className="image-box-column"
    >
      <ItemImage
        alt="Foo"
        buttonsPos="right"
        className="big-image"
        hasTrashButton={true}
        itemUrl="#"
        quickViewBtnProps={
          Object {
            "className": "quick-view-btn",
            "onClick": undefined,
          }
        }
        trashButtonProps={
          Object {
            "className": "trash-cart-button display-on-hover",
            "onClick": undefined,
          }
        }
        wishProps={
          Object {
            "className": "wish is-wished",
            "isWished": true,
            "onClick": undefined,
          }
        }
      />
    </div>
    <div
      className="info-box"
    >
      <div
        className="info-flex-wrapper column"
      >
        <div
          className="info column"
        >
          <div
            className="details column"
          >
            <ItemName
              href="#"
              textProps={
                Object {
                  "size": 16,
                }
              }
            >
              Foo
            </ItemName>
            <div
              className="price-fixed column"
            >
              <Box
                marginTop={2}
              >
                <Memo(Text)
                  color="gray38"
                  lineHeight={20}
                  size={14}
                >
                  Без скидок
                </Memo(Text)>
              </Box>
            </div>
            <ItemRating
              marginTop={3}
              reviewsCount={55}
              value={4.8}
            />
            <ItemModifier
              count={55}
              layout="block"
              name="baz"
              title="foo"
              withTitle={true}
            />
          </div>
          <div
            className="prices column"
          >
            <ItemPrice
              currencyGrapheme="$"
              measure="₽ / м"
              price={4999}
              priceLayout="row"
              showWholesalePrice={true}
              unitPrice={16}
              wholesaleProps={
                Object {
                  "description": "foo",
                  "price": 1000,
                }
              }
            />
          </div>
        </div>
        <Box
          alignItems="baseline"
          dangerouslySetInlineStyle={
            Object {
              "__style": Object {
                "alignSelf": "stretch",
                "maxWidth": "100%",
              },
            }
          }
          direction="column"
          display="flex"
          justifyContent="between"
          marginTop={3}
        >
          <ItemRetailFee
            currencyGrapheme="$"
            isSmaller={true}
            marginTop={2}
            minQty={10}
            price={50}
          />
          <AddToCartBlock
            additionStepText="for 2 pcs"
            asTile={true}
            className="add-to-cart column"
            onAdd={[Function]}
            onChange={[Function]}
            onSubtract={[Function]}
            qty={5}
          />
        </Box>
        <div
          className="in-stock-wrapper"
        >
          <Memo(Text)
            weight={600}
          >
            in stock 300
          </Memo(Text)>
          <div
            className="analogues display-on-hover"
          >
            <ForwardRef(Link)>
              <Memo(Text)
                weight={600}
              >
                Аналоги
              </Memo(Text)>
            </ForwardRef(Link)>
          </div>
        </div>
      </div>
    </div>
  </Box>
</div>
`;

exports[`<ListItem /> should render with all props 5`] = `
<div
  className="wrapper-column test-wrapper-class"
>
  <Box
    alignItems="stretch"
    direction="column"
    display="flex"
    flex="grow"
    paddingY={0}
  >
    <div
      className="image-box-column"
    >
      <ItemImage
        alt="Foo"
        buttonsPos="right"
        className="small-image"
        hasTrashButton={true}
        itemUrl="#"
        quickViewBtnProps={
          Object {
            "className": "quick-view-btn",
            "onClick": undefined,
          }
        }
        src="cdn-url"
        trashButtonProps={
          Object {
            "className": "trash-cart-button display-on-hover",
            "onClick": undefined,
          }
        }
        wishProps={
          Object {
            "className": "wish is-wished",
            "isWished": true,
            "onClick": undefined,
          }
        }
      />
    </div>
    <div
      className="info-box"
    >
      <div
        className="info-flex-wrapper column"
      >
        <div
          className="info column"
        >
          <div
            className="details column"
          >
            <ItemName
              href="#"
              textProps={
                Object {
                  "size": 16,
                }
              }
            >
              Foo
            </ItemName>
            <div
              className="price-fixed column"
            >
              <Box
                marginTop={2}
              >
                <Memo(Text)
                  color="gray38"
                  lineHeight={20}
                  size={14}
                >
                  Без скидок
                </Memo(Text)>
              </Box>
            </div>
            <ItemRating
              marginTop={3}
              reviewsCount={55}
              value={4.8}
            />
            <Box
              marginTop={2}
            >
              <Memo(Text)
                color="gray38"
                lineHeight={20}
                size={14}
              >
                Арт.: 
                10000
              </Memo(Text)>
            </Box>
            <ItemModifier
              count={55}
              layout="block"
              name="baz"
              title="foo"
              withTitle={true}
            />
          </div>
          <div
            className="prices column"
          >
            <ItemPrice
              currencyGrapheme="$"
              measure="₽ / м"
              price={4999}
              priceLayout="row"
              showWholesalePrice={true}
              unitPrice={16}
              wholesaleProps={
                Object {
                  "description": "foo",
                  "price": 1000,
                }
              }
            />
          </div>
        </div>
        <Box
          alignItems="baseline"
          dangerouslySetInlineStyle={
            Object {
              "__style": Object {
                "alignSelf": "stretch",
                "maxWidth": "100%",
              },
            }
          }
          direction="column"
          display="flex"
          justifyContent="between"
          marginTop={3}
        >
          <ItemRetailFee
            currencyGrapheme="$"
            isSmaller={true}
            marginTop={2}
            minQty={10}
            price={50}
          />
          <AddToCartBlock
            additionStepText="for 2 pcs"
            asTile={true}
            className="add-to-cart column small"
            onAdd={[Function]}
            onChange={[Function]}
            onSubtract={[Function]}
            qty={5}
          />
        </Box>
        <div
          className="in-stock-wrapper"
        >
          <Memo(Text)
            weight={600}
          >
            in stock 300
          </Memo(Text)>
          <div
            className="analogues display-on-hover"
          >
            <ForwardRef(Link)>
              <Memo(Text)
                weight={600}
              >
                Аналоги
              </Memo(Text)>
            </ForwardRef(Link)>
          </div>
        </div>
      </div>
    </div>
  </Box>
</div>
`;

exports[`<ListItem /> should render with all props 6`] = `
<div
  className="wrapper-column test-wrapper-class"
>
  <Box
    alignItems="stretch"
    direction="column"
    display="flex"
    flex="grow"
    paddingY={0}
  >
    <div
      className="image-box-column"
    >
      <ItemImage
        alt="Foo"
        buttonsPos="right"
        className="small-image"
        hasTrashButton={true}
        itemUrl="#"
        quickViewBtnProps={
          Object {
            "className": "quick-view-btn",
            "onClick": undefined,
          }
        }
        src="cdn-url"
        trashButtonProps={
          Object {
            "className": "trash-cart-button display-on-hover",
            "onClick": undefined,
          }
        }
        wishProps={
          Object {
            "className": "wish is-wished",
            "isWished": true,
            "onClick": undefined,
          }
        }
        withBlur={true}
      />
    </div>
    <AdultBlock
      marginTop={3}
    />
  </Box>
</div>
`;

exports[`<ListItem /> should render with all props 7`] = `
<div
  className="wrapper-column test-wrapper-class"
>
  <Box
    alignItems="stretch"
    direction="column"
    display="flex"
    flex="grow"
    paddingY={0}
  >
    <div
      className="image-box-column"
    >
      <ItemImage
        alt="Foo"
        buttonsPos="right"
        className="small-image"
        hasQuickPreview={false}
        hasTrashButton={true}
        hasWishButton={false}
        itemUrl="#"
        quickViewBtnProps={
          Object {
            "className": "quick-view-btn",
            "onClick": undefined,
          }
        }
        src="cdn-url"
        trashButtonProps={
          Object {
            "className": "trash-cart-button display-on-hover",
            "onClick": undefined,
          }
        }
        wishProps={
          Object {
            "className": "wish is-wished",
            "isWished": true,
            "onClick": undefined,
          }
        }
        withBlur={true}
      />
    </div>
    <AdultBlock
      marginTop={3}
    />
  </Box>
</div>
`;

exports[`<ListItem /> should render with shouldHideAdultContent prop 1`] = `
<div
  className="wrapper-row"
>
  <Box
    alignItems="stretch"
    direction="row"
    display="flex"
    flex="grow"
    paddingY={6}
  >
    <div
      className="image-box-row"
    >
      <ItemImage
        alt=""
        buttonsPos="left"
        className="image"
        quickViewBtnProps={
          Object {
            "className": "quick-view-btn",
            "onClick": undefined,
          }
        }
        trashButtonProps={
          Object {
            "className": "trash-cart-button display-on-hover",
            "onClick": undefined,
          }
        }
        wishProps={
          Object {
            "className": "wish",
            "isWished": undefined,
            "onClick": undefined,
          }
        }
        withBlur={true}
      />
    </div>
    <AdultBlock
      marginTop={0}
    />
  </Box>
</div>
`;

exports[`<ListItem /> should render with shouldHideAdultContent prop 2`] = `
<div
  className="wrapper-column"
>
  <Box
    alignItems="stretch"
    direction="column"
    display="flex"
    flex="grow"
    paddingY={0}
  >
    <div
      className="image-box-column"
    >
      <ItemImage
        alt=""
        buttonsPos="right"
        className="big-image"
        quickViewBtnProps={
          Object {
            "className": "quick-view-btn",
            "onClick": undefined,
          }
        }
        trashButtonProps={
          Object {
            "className": "trash-cart-button display-on-hover",
            "onClick": undefined,
          }
        }
        wishProps={
          Object {
            "className": "wish",
            "isWished": undefined,
            "onClick": undefined,
          }
        }
        withBlur={true}
      />
    </div>
    <AdultBlock
      marginTop={5}
    />
  </Box>
</div>
`;

exports[`<ListItem /> should render without props 1`] = `
<div
  className="wrapper-row"
>
  <Box
    alignItems="stretch"
    direction="row"
    display="flex"
    flex="grow"
    paddingY={6}
  >
    <div
      className="image-box-row"
    >
      <ItemImage
        alt=""
        buttonsPos="left"
        className="image"
        quickViewBtnProps={
          Object {
            "className": "quick-view-btn",
            "onClick": undefined,
          }
        }
        trashButtonProps={
          Object {
            "className": "trash-cart-button display-on-hover",
            "onClick": undefined,
          }
        }
        wishProps={
          Object {
            "className": "wish",
            "isWished": undefined,
            "onClick": undefined,
          }
        }
      />
    </div>
    <div
      className="info-box"
    >
      <div
        className="info-flex-wrapper row"
      >
        <div
          className="info row"
        >
          <div
            className="details row"
          />
          <div
            className="prices row"
          />
        </div>
        <Box
          alignItems="center"
          dangerouslySetInlineStyle={
            Object {
              "__style": Object {
                "alignSelf": "stretch",
                "maxWidth": "100%",
              },
            }
          }
          direction="column"
          display="flex"
          justifyContent="between"
          marginTop={0}
        />
      </div>
    </div>
  </Box>
</div>
`;
