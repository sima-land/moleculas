// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ItemImage /> should render badges 1`] = `
<ItemImage
  badges={
    Array [
      Object {
        "bgColor": "#b52ea8",
        "definitions": Object {
          "label": Object {
            "type": "text",
            "value": "-36%",
          },
        },
        "fields": Array [
          "label",
        ],
        "link": "/percent/",
        "strokeColor": null,
        "textColor": "#f2f2f2",
        "title": null,
      },
    ]
  }
>
  <div
    className="wrapper"
    onMouseLeave={[Function]}
  >
    <div
      className="image-wrapper"
    >
      <ForwardRef(Link)>
        <a
          className="link color__brand-blue"
        >
          <img
            className="image"
          />
        </a>
      </ForwardRef(Link)>
    </div>
    <div
      className="badges"
    >
      <FlagsList
        flags={
          Array [
            Object {
              "bgColor": "#b52ea8",
              "definitions": Object {
                "label": Object {
                  "type": "text",
                  "value": "-36%",
                },
              },
              "fields": Array [
                "label",
              ],
              "link": "/percent/",
              "strokeColor": null,
              "textColor": "#f2f2f2",
              "title": null,
            },
          ]
        }
      >
        <div
          className="wrap"
        >
          <Badge
            bgColor="#b52ea8"
            className="item"
            definitions={
              Object {
                "label": Object {
                  "type": "text",
                  "value": "-36%",
                },
              }
            }
            fields={
              Array [
                "label",
              ]
            }
            key="0"
            link="/percent/"
            strokeColor={null}
            textColor="#f2f2f2"
            title={null}
          >
            <span
              bgColor="#b52ea8"
              className="root item"
              definitions={
                Object {
                  "label": Object {
                    "type": "text",
                    "value": "-36%",
                  },
                }
              }
              link="/percent/"
              strokeColor={null}
              style={
                Object {
                  "--badge-color": undefined,
                }
              }
              textColor="#f2f2f2"
              title={null}
            >
              <span
                className="content"
              />
            </span>
          </Badge>
        </div>
      </FlagsList>
    </div>
  </div>
</ItemImage>
`;

exports[`<ItemImage /> should render fake divs 1`] = `
<ItemImage
  photos={
    Array [
      "photo1",
      "photo2",
    ]
  }
  src="test src"
  withBlur={false}
>
  <div
    className="wrapper"
    onMouseLeave={[Function]}
  >
    <div
      className="image-wrapper"
    >
      <ForwardRef(Link)>
        <a
          className="link color__brand-blue"
        >
          <div
            className="fake-hover-wrapper"
          >
            <div
              className="fake-hover"
              key="100"
              onMouseOver={[Function]}
              style={
                Object {
                  "left": 0,
                  "width": 0,
                }
              }
            >
              <div
                className="fake-hover-label"
              />
            </div>
            <div
              className="fake-hover"
              key="101"
              onMouseOver={[Function]}
              style={
                Object {
                  "left": 0,
                  "width": 0,
                }
              }
            >
              <div
                className="fake-hover-label"
              />
            </div>
          </div>
          <img
            className="image"
            src="test src"
          />
        </a>
      </ForwardRef(Link)>
    </div>
  </div>
</ItemImage>
`;

exports[`<ItemImage /> should render wish 1`] = `
<ItemImage
  wishProps={Object {}}
>
  <div
    className="wrapper"
    onMouseLeave={[Function]}
  >
    <div
      className="image-wrapper"
    >
      <ForwardRef(Link)>
        <a
          className="link color__brand-blue"
        >
          <img
            className="image"
          />
        </a>
      </ForwardRef(Link)>
    </div>
  </div>
</ItemImage>
`;

exports[`<ItemImage /> should render wish 2`] = `
<ItemImage
  wishProps={
    Object {
      "isWished": true,
    }
  }
>
  <div
    className="wrapper"
    onMouseLeave={[Function]}
  >
    <div
      className="image-wrapper"
    >
      <ForwardRef(Link)>
        <a
          className="link color__brand-blue"
        >
          <img
            className="image"
          />
        </a>
      </ForwardRef(Link)>
    </div>
  </div>
</ItemImage>
`;

exports[`<ItemImage /> should render with quick preview button 1`] = `
<div
  className="wrapper"
  onMouseLeave={[Function]}
>
  <div
    className="image-wrapper"
  >
    <ForwardRef(Link)>
      <img
        className="image"
      />
    </ForwardRef(Link)>
  </div>
  <QuickViewButton
    className="icon left test-quick-view-button"
    onClick={[MockFunction]}
  />
</div>
`;

exports[`<ItemImage /> should render with selection button 1`] = `
<div
  className="wrapper"
  onMouseLeave={[Function]}
>
  <div
    className="image-wrapper"
  >
    <ForwardRef(Link)>
      <img
        className="image"
      />
    </ForwardRef(Link)>
  </div>
  <div
    className="selection-container"
    onClick={[MockFunction]}
  >
    <div
      className="selection-circle"
    >
      <SelectedSVG
        height={56}
        viewBox="0 0 36 36"
        width={56}
        xmlns="http://www.w3.org/2000/svg"
      />
    </div>
  </div>
</div>
`;

exports[`<ItemImage /> should render with trash cart button 1`] = `
<div
  className="wrapper"
  onMouseLeave={[Function]}
>
  <div
    className="image-wrapper"
  >
    <ForwardRef(Link)>
      <img
        className="image"
      />
    </ForwardRef(Link)>
    <TrashCartSVG
      className="icon left test-trash-button"
      color="gray87"
      data-testid="item-image:remove-button"
      height={24}
      onClick={[MockFunction]}
      viewBox="0 0 24 24"
      width={24}
      xmlns="http://www.w3.org/2000/svg"
    />
  </div>
</div>
`;

exports[`<ItemImage /> should render with wish button 1`] = `
<div
  className="wrapper"
  onMouseLeave={[Function]}
>
  <div
    className="image-wrapper"
  >
    <ForwardRef(Link)>
      <img
        className="image"
      />
    </ForwardRef(Link)>
  </div>
  <WishButton
    className="icon left test-wish-button"
    onClick={[MockFunction]}
  />
</div>
`;

exports[`<ItemImage /> should render with withBlur prop 1`] = `
<ItemImage
  withBlur={true}
>
  <div
    className="wrapper"
    onMouseLeave={[Function]}
  >
    <div
      className="with-blur"
    >
      <EighteenPlusSVG
        height={124}
        viewBox="0 0 36 36"
        width={124}
        xmlns="http://www.w3.org/2000/svg"
      >
        <svg
          height={124}
          viewBox="0 0 36 36"
          width={124}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M30.822 10.819h-1.438V6.746h-4.072V5.31h4.072V1.236h1.438V5.31h4.072v1.437h-4.072v4.073zm-10.418 4.505c.368.418 1.047.834 2.04 1.252.892-.38 1.523-.787 1.894-1.223.371-.437.557-.946.557-1.528 0-.638-.226-1.145-.678-1.522-.452-.376-1.075-.564-1.867-.564-.78 0-1.391.19-1.834.569-.443.38-.664.885-.664 1.517 0 .582.183 1.082.552 1.499zm-.365 3.941c-.418.49-.627 1.076-.627 1.76 0 .758.26 1.35.78 1.773.522.424 1.253.635 2.195.635.93 0 1.653-.22 2.17-.663.519-.443.778-1.05.778-1.822 0-.613-.243-1.158-.73-1.635-.487-.478-1.335-.94-2.545-1.39-.93.404-1.603.852-2.021 1.342zm-1.151-3.585a3.433 3.433 0 0 1-.562-1.921c0-1.005.367-1.807 1.1-2.404.733-.598 1.714-.897 2.943-.897 1.248 0 2.236.294 2.966.883.73.588 1.095 1.4 1.095 2.437a3.06 3.06 0 0 1-.627 1.869c-.418.562-1.085 1.075-2.003 1.536 1.11.537 1.9 1.102 2.368 1.693.468.592.702 1.276.702 2.054 0 1.15-.397 2.069-1.188 2.755-.793.686-1.879 1.03-3.257 1.03-1.46 0-2.583-.325-3.369-.973-.786-.648-1.179-1.566-1.179-2.755 0-1.587.955-2.824 2.864-3.71-.861-.492-1.479-1.025-1.853-1.597zm-.883 20.292C8.083 35.972.04 27.928.04 18.005.039 8.083 8.083.04 18.005.04c2.095 0 4.106.358 5.975 1.017.014.319.014 1.503.014 1.498-1.863-.728-3.867-1.078-5.989-1.078-9.129 0-16.529 7.4-16.529 16.53 0 9.128 7.4 16.528 16.53 16.528 9.128 0 16.529-7.4 16.529-16.529 0-2.116-.398-4.139-1.123-5.999.793.01 1.398.01 1.537.009a17.936 17.936 0 0 1 1.023 5.99c0 9.923-8.044 17.967-17.967 17.967zM9.487 14.575l-.823-1.081 3.621-2.836h1.31v13.866h-1.516v-9.883c0-.822.025-1.6.075-2.333a10.18 10.18 0 0 1-.44.418c-.162.145-.904.762-2.227 1.849z"
            fillRule="evenodd"
            opacity=".3"
          />
        </svg>
      </EighteenPlusSVG>
    </div>
    <div
      className="image-wrapper"
    >
      <ForwardRef(Link)>
        <a
          className="link color__brand-blue"
        >
          <div
            className="with-filter-blur"
          >
            <img
              className="image"
            />
          </div>
        </a>
      </ForwardRef(Link)>
    </div>
  </div>
</ItemImage>
`;

exports[`<ItemImage /> should render without props 1`] = `
<ItemImage>
  <div
    className="wrapper"
    onMouseLeave={[Function]}
  >
    <div
      className="image-wrapper"
    >
      <ForwardRef(Link)>
        <a
          className="link color__brand-blue"
        >
          <img
            className="image"
          />
        </a>
      </ForwardRef(Link)>
    </div>
  </div>
</ItemImage>
`;
